name: Coverage

on:
  push:
    branches: [main]
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  coverage:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        features: ["", "--all-features"]
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-rust
      - name: Install coverage tools
        run: |
          rustup component add llvm-tools-preview
          cargo install grcov
      - name: Run tests with coverage instrumentation
        env:
          CARGO_INCREMENTAL: 0
          RUSTFLAGS: "-Cinstrument-coverage"
          LLVM_PROFILE_FILE: "coverage-%p-%m.profraw"
        run: |
          cargo test --features internal-tests ${{ matrix.features }}
      - name: Generate coverage report
        run: |
          grcov . --binary-path ./target/debug/ --source-dir . --output-type lcov --branch --ignore-not-existing --ignore '/*' -o lcov.info
      - name: Check coverage threshold
        run: |
          SUMMARY=$(grcov . --binary-path ./target/debug/ --source-dir . --output-type summary --branch --ignore-not-existing --ignore '/*')
          echo "$SUMMARY"
          PERCENT=$(echo "$SUMMARY" | grep -o 'lines:[[:space:]]*[0-9.]*%' | grep -o '[0-9.]*')
          echo "Line coverage: $PERCENT%"
          awk -v p=$PERCENT 'BEGIN { if (p < 50.0) exit 1 }'
      - name: Upload coverage to Codecov
        if: ${{ secrets.CODECOV_TOKEN != '' }}
        uses: codecov/codecov-action@v4
        with:
          files: lcov.info
          token: ${{ secrets.CODECOV_TOKEN }}
        continue-on-error: true
