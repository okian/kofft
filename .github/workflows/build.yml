name: Build

on:
  push:
    branches: [main]
  pull_request:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        features:
          - ""
          - "--no-default-features"
          - "--features \"sse std\""
          - "--features \"parallel\""
          - "--all-features"
        target:
          - ""
          - "x86_64-unknown-linux-gnu"
          - "aarch64-unknown-linux-gnu"
          - "wasm32-unknown-unknown"
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}
      - uses: actions/cache@v3
        with:
          path: |
            ${{ env.CARGO_HOME }}/registry
            ${{ env.CARGO_HOME }}/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Build and bench
        shell: bash
        run: |
          set -e
          FEATURES='${{ matrix.features }}'
          TARGET='${{ matrix.target }}'
          if [ -n "$TARGET" ]; then
            TARGET="--target $TARGET"
          fi
          cargo build --all-targets $FEATURES $TARGET
          cargo bench --no-run $FEATURES $TARGET

