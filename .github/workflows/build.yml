name: Build

on:
  push:
    branches: [main]
  pull_request:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        features:
          - ""
          - "--no-default-features"
          - "--features sse,std"
          - "--features parallel"
          - "--all-features"
        include:
          - os: ubuntu-latest
            target: ""
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
          - os: ubuntu-latest
            target: wasm32-unknown-unknown
          - os: macos-latest
            target: ""
          - os: windows-latest
            target: ""
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}
      - uses: actions/cache@v3
        with:
          path: |
            ${{ env.CARGO_HOME }}/registry
            ${{ env.CARGO_HOME }}/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Build all targets
        shell: bash
        run: |
          TARGET_ARG=""
          if [ -n "${{ matrix.target }}" ]; then
            TARGET_ARG="--target ${{ matrix.target }}"
          fi
          cargo build --all-targets ${{ matrix.features }} $TARGET_ARG
          cargo bench --no-run ${{ matrix.features }} $TARGET_ARG
